///////////////////////////////////////////////////////  方法一  //////////////////////////////////////////////////////

class Solution {
public:
    string intToRoman(int num) {
        string ret = "";
        string Snum = to_string(num);
        int size = Snum.size();
        
        for (char e : Snum)
        {
            int n = e - '0';

            if (size == 4)
            {
                while (n)
                {
                    ret += "M";
                    --n;
                }
            }

            else if (size == 3)
            {
                if (n == 9) ret += "CM";
                else if (n > 4 && n < 9) 
                {
                    ret += "D";
                    while (n - 5)
                    {
                        ret += "C";
                        --n;
                    }
                }
                else if (n == 4) ret += "CD";
                else 
                {
                    while (n)
                    {
                        ret += "C";
                        --n;
                    }
                }
            }

            else if (size == 2)
            {
                if (n == 9) ret += "XC";
                else if (n > 4 && n < 9) 
                {
                    ret += "L";
                    while (n - 5)
                    {
                        ret += "X";
                        --n;
                    }
                }
                else if (n == 4) ret += "XL";
                else 
                {
                    while (n)
                    {
                        ret += "X";
                        --n;
                    }
                }
            }

            else 
            {
                if (n == 9) ret += "IX";
                else if (n > 4 && n < 9) 
                {
                    ret += "V";
                    while (n - 5)
                    {
                        ret += "I";
                        --n;
                    }
                }
                else if (n == 4) ret += "IV";
                else 
                {
                    while (n)
                    {
                        ret += "I";
                        --n;
                    }
                }
            }

            --size;
        }

        return ret;
    }
};

///////////////////////////////////////////////////////  方法一  //////////////////////////////////////////////////////
///////////////////////////////////////////////////////  方法二  //////////////////////////////////////////////////////

class Solution {
public:
    string intToRoman(int num) {
        map<int, string> m;
        m.insert(pair<int, string>(1,"I"));
        m.insert(pair<int, string>(4,"IV"));
        m.insert(pair<int, string>(5,"V"));
        m.insert(pair<int, string>(9,"IX"));
        m.insert(pair<int, string>(10,"X"));
        m.insert(pair<int, string>(40,"XL"));
        m.insert(pair<int, string>(50,"L"));
        m.insert(pair<int, string>(90,"XC"));
        m.insert(pair<int, string>(100,"C"));
        m.insert(pair<int, string>(400,"CD"));
        m.insert(pair<int, string>(500,"D"));
        m.insert(pair<int, string>(900,"CM"));
        m.insert(pair<int, string>(1000,"M"));

        string ret = "";
        auto it = m.rbegin();
        while (num)
        {
            if (num >= it->first) {ret += it->second; num -= it->first;}
            else ++it;
        }

        return ret;
    }
};

///////////////////////////////////////////////////////  方法二  //////////////////////////////////////////////////////
